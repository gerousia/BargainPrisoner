namespace = gm1_interaction

##############################
## GM1 interaction_events list
##############################

# events:
## 0000 - 0099 	- Offer Prisoner Interaction.
## 0100 - 0199 	- Demand Prisoner Interaction.
## 0200 - 0299 	- Exchange Prisoner Interaction.
## 0500 - 0599 	- Prisoner Interaction Invalidated.

##############################
## GM1 interaction_events
##############################

### To the author at PDX who wrote this original line, 
### "- there is no god nor consistency when it comes to localization.", 
### You're goddamn right.
	
# based on ./common/scripted_effects/05_dlc_bp2_effects.txt/take_hostage
## RECEIVER (character)
## PRISONER (character)
scripted_effect receive_prisoner = {
	custom_description = {
		text = "receive_prisoner_tooltip_effect"
		subject = $RECEIVER$
		object = $PRISONER$
	}
}

# based on ./common/scripted_effects/05_dlc_bp2_effects.txt/take_hostage
## SENDER (character)
## PRISONER (character)
scripted_effect send_prisoner = {
	custom_description = {
		text = "send_prisoner_tooltip_effect"
		subject = $SENDER$
		object = $PRISONER$
	}
}

#------------------------------
# Offer Transfer Prisoner Interaction
# 0010 - 0019
#------------------------------

# based on ./events/interaction_events/character_interaction_events.txt/char_interaction.0330
## Offer Prisoner: Accepted
### has_game_rule = gm1_enable_travel
gm1_interaction.0011 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = {
		desc = gm1_interaction.0011.desc_1
		desc = gm1_interaction.0011.desc_2
	}
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		send_interface_message = {
			type = event_prison_neutral
			title = offer_prisoner_interaction_notification
			left_icon = scope:secondary_actor
			right_icon = scope:recipient
			
			show_as_tooltip = {	
				send_prisoner = {
					SENDER = scope:actor
					PRISONER = scope:secondary_actor
				}
				
				transfer_prisoner_interaction_stress_effect = { 
					PRISONER = scope:secondary_actor
					IMPRISONER = scope:actor
				}
			
				transfer_prisoner_interaction_dread_effect = { 
					PRISONER = scope:secondary_actor
					IMPRISONER = scope:actor
				}
		
				transfer_prisoner_interaction_escalate_rivalry_effect = {
					PRISONER = scope:secondary_actor
					NEW_IMPRISONER = scope:recipient
				}
			}
		}

		hidden_effect = {
			scope:recipient = {
				send_interface_message = {
					type = event_prison_good
					title = offer_prisoner_interaction_notification
					left_icon = scope:secondary_actor
					right_icon = scope:actor
					
					show_as_tooltip = {
						send_prisoner = {
							SENDER = scope:actor
							PRISONER = scope:secondary_actor
						}

						transfer_prisoner_interaction_stress_effect = { 
							PRISONER = scope:secondary_actor
							IMPRISONER = scope:recipient
						}
					
						transfer_prisoner_interaction_dread_effect = { 
							PRISONER = scope:secondary_actor
							IMPRISONER = scope:recipient
						}
					}
				}
			}
	
			scope:secondary_actor = {
				send_interface_message = {
					type = event_prison_bad
					title = offer_prisoner_interaction_notification
					left_icon = scope:actor
					right_icon = scope:recipient
					
					show_as_tooltip = {
						send_prisoner = {
							SENDER = scope:actor
							PRISONER = scope:secondary_actor
						}
					}
				}
			}
		}
	}

	option = {
		name = gm1_interaction.0011.a
	}

	after = {
		show_as_tooltip = {
			receive_prisoner = {
				RECEIVER = scope:recipient
				PRISONER = scope:secondary_actor
			}

			transfer_prisoner_interaction_bargain_effect = {
				PRISONER = scope:secondary_actor
				SENDER = scope:actor
				RECEIVER = scope:recipient
			}
		}
	}
}

# based on ./events/interaction_events/character_interaction_events.txt/char_interaction.0330
## Offer Prisoner: Accepted
### has_game_rule = gm1_disable_travel
gm1_interaction.0016 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = gm1_interaction.0011.desc_1
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		send_interface_message = {
			type = event_prison_neutral
			title = offer_prisoner_interaction_notification
			left_icon = scope:secondary_actor
			right_icon = scope:recipient
			
			show_as_tooltip = {	
				receive_prisoner = {
					RECEIVER = scope:recipient
					PRISONER = scope:secondary_actor
				}
			}
		}

		hidden_effect = {
			scope:recipient = {
				send_interface_message = {
					type = event_prison_good
					title = offer_prisoner_interaction_notification
					left_icon = scope:secondary_actor
					right_icon = scope:actor
					
					show_as_tooltip = {
						receive_prisoner = {
							RECEIVER = scope:recipient
							PRISONER = scope:secondary_actor
						}
					}
				}
			}
	
			scope:secondary_actor = {
				send_interface_message = {
					type = event_prison_bad
					title = offer_prisoner_interaction_notification
					left_icon = scope:actor
					right_icon = scope:recipient
					
					show_as_tooltip = {
						receive_prisoner = {
							RECEIVER = scope:recipient
							PRISONER = scope:secondary_actor
						}
					}
				}
			}
		}
	}

	option = {
		name = gm1_interaction.0011.a
	}
}

# based on ./events/interaction_events/character_interaction_events.txt/char_interaction.0300
## Offer Prisoner: Declined
gm1_interaction.0012 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = gm1_interaction.0012.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = gm1_interaction.0012.a
	}
}

#------------------------------
# Demand Transfer Prisoner Interaction
# 0020 - 0029
#------------------------------

# based on ./events/interaction_events/character_interaction_events.txt/char_interaction.0331
## Demand Prisoner: Accepted
### has_game_rule = gm1_enable_travel
gm1_interaction.0021 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = {
		desc = gm1_interaction.0021.desc_1
		desc = gm1_interaction.0021.desc_2
	}
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		scope:actor = {
			send_interface_message = {
				type = event_prison_good
				title = demand_prisoner_interaction_notification
				left_icon = scope:secondary_recipient
				right_icon = scope:recipient
				
				show_as_tooltip = {
					send_prisoner = {
						SENDER = scope:recipient
						PRISONER = scope:secondary_recipient
					}

					transfer_prisoner_interaction_stress_effect = { 
						PRISONER = scope:secondary_recipient
						IMPRISONER = scope:actor
					}
				
					transfer_prisoner_interaction_dread_effect = { 
						PRISONER = scope:secondary_recipient
						IMPRISONER = scope:actor
					}
				}
			}
		}

		hidden_effect = {
			scope:recipient = {
				send_interface_message = {
					type = event_prison_neutral
					title = demand_prisoner_interaction_notification
					left_icon = scope:secondary_recipient
					right_icon = scope:actor
					
					show_as_tooltip = {
						send_prisoner = {
							SENDER = scope:recipient
							PRISONER = scope:secondary_recipient
						}

						transfer_prisoner_interaction_stress_effect = { 
							PRISONER = scope:secondary_recipient
							IMPRISONER = scope:recipient
						}
					
						transfer_prisoner_interaction_dread_effect = { 
							PRISONER = scope:secondary_recipient
							IMPRISONER = scope:recipient
						}
				
						transfer_prisoner_interaction_escalate_rivalry_effect = {
							PRISONER = scope:secondary_recipient
							NEW_IMPRISONER = scope:actor
						}
					}					
				}
			}
	
			scope:secondary_recipient = {
				send_interface_message = {
					type = event_prison_bad
					title = demand_prisoner_interaction_notification
					left_icon = scope:actor
					right_icon = scope:recipient
					
					show_as_tooltip = {
						send_prisoner = {
							SENDER = scope:recipient
							PRISONER = scope:secondary_recipient
						}
					}
				}
			}
		}
	}

	option = {
		name = gm1_interaction.0021.a
	}

	after = {
		show_as_tooltip = {
			receive_prisoner = {
				RECEIVER = scope:recipient
				PRISONER = scope:secondary_recipient
			}

			transfer_prisoner_interaction_bargain_effect = {
				PRISONER = scope:secondary_recipient
				SENDER = scope:recipient
				RECEIVER = scope:actor
			}
		}
	}
}

# based on ./events/interaction_events/character_interaction_events.txt/char_interaction.0331
## Demand Prisoner: Accepted
### has_game_rule = gm1_disable_travel
gm1_interaction.0026 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = gm1_interaction.0021.desc_1
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {
		scope:actor = {
			send_interface_message = {
				type = event_prison_good
				title = demand_prisoner_interaction_notification
				left_icon = scope:secondary_recipient
				right_icon = scope:recipient
				
				show_as_tooltip = {
					receive_prisoner = {
						RECEIVER = scope:recipient
						PRISONER = scope:secondary_recipient
					}
				}
			}
		}

		hidden_effect = {
			scope:recipient = {
				send_interface_message = {
					type = event_prison_neutral
					title = demand_prisoner_interaction_notification
					left_icon = scope:secondary_recipient
					right_icon = scope:actor
					
					show_as_tooltip = {
						receive_prisoner = {
							RECEIVER = scope:recipient
							PRISONER = scope:secondary_recipient
						}
					}					
				}
			}
	
			scope:secondary_recipient = {
				send_interface_message = {
					type = event_prison_bad
					title = demand_prisoner_interaction_notification
					left_icon = scope:actor
					right_icon = scope:recipient
					
					show_as_tooltip = {
						receive_prisoner = {
							RECEIVER = scope:recipient
							PRISONER = scope:secondary_recipient
						}
					}
				}
			}
		}
	}

	option = {
		name = gm1_interaction.0021.a
	}
}

# based on ./events/interaction_events/character_interaction_events.txt/char_interaction.0301
## Demand Prisoner: Declined
gm1_interaction.0022 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
		desc = char_interaction.0001.opening
	}
	desc = {
		random_valid = {
			desc = gm1_interaction.0022.desc_a
			desc = gm1_interaction.0022.desc_b
		}
	}
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = gm1_interaction.0022.a
	}
}

#------------------------------
# Exchange Transfer Prisoner Interaction
# 0030 - 0039
#------------------------------

# based on ./events/interaction_events/character_interaction_events.txt/char_interaction.0332
## Exchange Prisoner: Accepted
gm1_interaction.0031 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = {
		desc = gm1_interaction.0031.desc_1
		desc = gm1_interaction.0031.desc_2
		desc = gm1_interaction.0031.desc_3
	}
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	immediate = {

	}

	option = {
		name = gm1_interaction.0031.a
	}
}

# based on ./events/interaction_events/character_interaction_events.txt/char_interaction.0311
## Exchange Prisoner: Declined
gm1_interaction.0032 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = gm1_interaction.0032.desc
		
	sender = {
		character = scope:recipient
		animation = dismissal
	}

	option = {
		name = gm1_interaction.0032.a
	}
}

#------------------------------
# Transfer Prisoner Interaction Succesful
# 0100 - 0299
#------------------------------

# This serves as an event-redirect and a starter for this event chain.
## Notifies involved characters when the prisoner arrives at their target's court. 
gm1_interaction.0100 = {
	hidden = yes

	immediate = {	
		save_scope_as = prisoner

		var:old_imprisoner = {
			save_scope_as = sender
		}

		var:new_imprisoner = {
			save_scope_as = receiver
		}

		var:travel_escort = {
			save_scope_as = escort
		}

		scope:sender = {
			if = {
				limit = { is_ai = no }
				trigger_event = gm1_interaction.0111
			}
		}

		scope:receiver = {
			if = {
				limit = { is_ai = no }
				trigger_event = gm1_interaction.0121
			}
		}

		scope:prisoner = {
			if = {
				limit = { is_ai = no }
				trigger_event = gm1_interaction.0131
			}
		}
	}
}

####### Sender Perspective
####### 0110 - 0119

## The sender's prisoner arrives at the receiver's court.
### This is the sender's perspective.
gm1_interaction.0111 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = {
		desc = gm1_interaction.0111.desc_1
		desc = gm1_interaction.0111.desc_2
	}

	sender = {
		character = scope:receiver
		animation = dismissal
	}

	immediate = {
		send_interface_message = {
			type = event_prison_neutral
			title = msg_transfer_prisoner_interaction_title
			left_icon = scope:prisoner
			right_icon = scope:receiver
			
			show_as_tooltip = {
				receive_prisoner = {
					RECEIVER = scope:receiver
					PRISONER = scope:prisoner
				}
	
				transfer_prisoner_interaction_bargain_effect = {
					PRISONER = scope:prisoner
					SENDER = scope:sender
					RECEIVER = scope:receiver
				}
			}
		}
	}

	option = {
		name = gm1_interaction.0111.a
	}
}

####### Receiver Perspective
####### 0120 - 0129

## The sender's prisoner arrives at the receiver's court. 
### This is the receiver's perspective.
gm1_interaction.0121 = {
	type = letter_event
	opening = {
		desc = char_interaction.0001.opening
	}
	desc = {
		desc = gm1_interaction.0121.desc_1
		desc = gm1_interaction.0121.desc_2
	}
	
	sender = {
		character = scope:sender
		animation = dismissal
	}

	immediate = {
		send_interface_message = {
			type = event_prison_good
			title = msg_transfer_prisoner_interaction_title
			left_icon = scope:prisoner
			right_icon = scope:sender
			
			show_as_tooltip = {
				receive_prisoner = {
					RECEIVER = scope:receiver
					PRISONER = scope:prisoner
				}
	
				transfer_prisoner_interaction_bargain_effect = {
					PRISONER = scope:prisoner
					SENDER = scope:sender
					RECEIVER = scope:receiver
				}
			}
		}
	}

	option = {
		name = gm1_interaction.0121.a
	}

	after = {
		trigger_event = gm1_interaction.0122
	}
}

### This is how the receiver would interact with the prisoner up arriving.
gm1_interaction.0122 = {
	type = character_event
	title = gm1_interaction.0122.title
	desc = {
		desc = gm1_interaction.0122.intro
		triggered_desc = {
			trigger = { 
				is_at_war_with = scope:prisoner	
			}
			desc = gm1_interaction.0122.desc.war_1
		}
		triggered_desc = {
			trigger = { 
				is_at_war_with = scope:prisoner	
				any_character_war = {
					is_war_leader = scope:prisoner
				}
			}
			desc = gm1_interaction.0122.desc.war_2
		}
		triggered_desc = {
			trigger = {
				has_relation_rival = scope:prisoner
			}
			desc = gm1_interaction.0122.desc.rival
		}
		triggered_desc = {
			trigger = {
				opinion = {
					target = scope:prisoner
					value <= high_negative_opinion
				}
			}
			desc = gm1_interaction.0122.desc.negative_opinion
		}
		desc = gm1_interaction.0122.outro
	}

	theme = prison

	left_portrait = {
		character = scope:receiver
		triggered_animation = {
			trigger = {
				OR = {
					is_at_war_with = scope:prisoner
					has_relation_rival = scope:prisoner
					opinion = {
						target = scope:prisoner
						value <= high_negative_opinion
					}

				}
			}
			animation = anger
		}
		animation = scheming
	}

	right_portrait = {
		character = scope:prisoner
		animation = sadness
	}

	immediate = {
		show_as_tooltip = {
			imprison = {
				target = scope:prisoner
				type = house_arrest
			}
		}
	}

	option = {
		name = gm1_interaction.0122.a
	}
}

###### Prisoner Perspective
###### 0130 - 0139

## The sender's prisoner arrives at the receiver's court. 
### This is the prisoner's perspective.
gm1_interaction.0131 = {
	hidden = yes

	immediate = {
		send_interface_message = {
			type = event_prison_bad
			title = msg_transfer_prisoner_interaction_title
			left_icon = scope:sender
			right_icon = scope:receiver
			
			show_as_tooltip = {
				receive_prisoner = {
					RECEIVER = scope:receiver
					PRISONER = scope:prisoner
				}
			}
		}
	}
}

#------------------------------
# Transfer Prisoner Interaction Failed
# 0500 - 0599
#------------------------------

# This serves as an event-redirect and a starter for this event chain.
gm1_interaction.0500 = {
	hidden = yes

	immediate = {
		save_scope_as = prisoner

		var:old_imprisoner = {
			save_scope_as = sender
		}

		var:new_imprisoner = {
			save_scope_as = receiver
		}

		var:travel_escort = {
			save_scope_as = escort
		}

		scope:prisoner = {
			### Determine if this interaction is invalidated
			transfer_prisoner_company_invalidate_effect = yes
			
			trigger_event = {
				on_action = on_invalidate_transfer_prisoner_interaction
			}
		}
	}
}

# transfer prisoner interaction invalidated
## flag:prisoner
gm1_interaction.0501 = {
	hidden = yes

	trigger = { 
		exists = var:invalidate_reason
		var:invalidate_reason = flag:prisoner
	}

	on_trigger_fail = {
		debug_log = "GM1: gm1_interaction.0501 failed."
		debug_log_scopes = yes
	}

	immediate = {
		scope:sender = {
			send_interface_toast = {
				title = transfer_prisoner_interaction_invalidated_toast
				left_icon = scope:prisoner
				right_icon = scope:receiver

				custom_description = {
					text = "escape_tooltip_effect"
					subject = scope:prisoner
				}
			}
		}

		scope:receiver = {
			send_interface_toast = {
				title = transfer_prisoner_interaction_invalidated_toast
				left_icon = scope:prisoner
				right_icon = scope:sender

				custom_description = {
					text = "escape_tooltip_effect"
					subject = scope:prisoner
				}
			}
		}
	}
}

# transfer prisoner interaction invalidated
## flag:sender
gm1_interaction.0502 = {
	hidden = yes
	
	trigger = { 
		exists = var:invalidate_reason
		var:invalidate_reason = flag:sender 
	}

	on_trigger_fail = {
		debug_log = "GM1: gm1_interaction.0502 failed."
		debug_log_scopes = yes
	}

	immediate = {
		## Notify their new jailor instead
		scope:prisoner.imprisoner ?= {
			send_interface_toast = {
				title = transfer_prisoner_interaction_invalidated_toast
				left_icon = scope:prisoner
				right_icon = scope:receiver

				show_as_tooltip = {
					scope:sender = {
						if = {
							limit = { is_alive = no }
							death = { death_reason = death_vanished } 
						}
						else = {
							depose = yes
						}
					}
				}
			}
		}

		scope:receiver = {
			send_interface_toast = {
				title = transfer_prisoner_interaction_invalidated_toast
				left_icon = scope:prisoner
				right_icon = scope:sender

				show_as_tooltip = {
					scope:sender = {
						if = {
							limit = { is_alive = no }
							death = { death_reason = death_vanished } 
						}
						else = {
							depose = yes
						}
					}
				}
			}
		}
	}
}

# transfer prisoner interaction invalidated
## flag:receiver
gm1_interaction.0503 = {
	hidden = yes

	trigger = { 
		exists = var:invalidate_reason
		var:invalidate_reason = flag:receiver
	}

	on_trigger_fail = {
		debug_log = "GM1: gm1_interaction.0503 failed."
		debug_log_scopes = yes
	}

	immediate = {		
		scope:sender = {
			send_interface_toast = {
				title = transfer_prisoner_interaction_invalidated_toast
				left_icon = scope:prisoner
				right_icon = scope:receiver

				show_as_tooltip = {
					scope:receiver = {
						if = {
							limit = { is_alive = no }
							death = { death_reason = death_vanished } 
						}
						else = {
							depose = yes
						}
					}
				}
			}
		}

		## We honestly only care if they are a player
		scope:receiver.player_heir ?= {
			send_interface_toast = {
				title = transfer_prisoner_interaction_invalidated_toast
				left_icon = scope:prisoner
				right_icon = scope:sender

				show_as_tooltip = {
					scope:receiver = {
						if = {
							limit = { is_alive = no }
							death = { death_reason = death_vanished } 
						}
						else = {
							depose = yes
						}
					}
				}
			}
		}
	}
}

# transfer prisoner interaction invalidated
## flag:escort
gm1_interaction.0504 = {
	hidden = yes
		
	trigger = { 
		exists = var:invalidate_reason
		var:invalidate_reason = flag:escort
	}

	on_trigger_fail = {
		debug_log = "GM1: gm1_interaction.0504 failed."
		debug_log_scopes = yes
	}

	immediate = {
		scope:sender = {
			send_interface_toast = {
				title = transfer_prisoner_interaction_invalidated_toast
				left_icon = scope:prisoner
				right_icon = scope:receiver

				show_as_tooltip = {
					scope:escort = { depose = yes }
				}
			}
		}

		scope:receiver = {
			send_interface_toast = {
				title = transfer_prisoner_interaction_invalidated_toast
				left_icon = scope:prisoner
				right_icon = scope:sender

				show_as_tooltip = {
					scope:escort = { depose = yes }
				}
			}
		}
	}
}