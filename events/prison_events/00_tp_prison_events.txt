namespace = tp_prison

##############################
## TP Prison events
##############################

###############
# Attempt Escape
###############

## Based from ./events/prison_events/prison_events.txt
# Does your attempt succeed or not?
# root = bodyguard_from_sender
tp_prison.9000 = {
	hidden = yes

	immediate = {
		root.imprisoner = {
			save_scope_as = imprisoner
		}
		var:prisoner_bodyguard_travelling_to_recipient ?= { 
			save_scope_as = travel_bodyguard 
		}

		# Auto-escape.
		if = { 
			limit = { scope:travel_bodyguard = { is_alive = no } }
			trigger_event = tp_prison.9100
		}
		# Attempt Escape.
		else = {
			random_list = {
				## Success.
				50 = {
					trigger_event = {
						on_action = tp_escape_from_prison_success
					}
					min = 5
					modifier = {
						add = {
							value = prowess
							subtract = average_skill_rating
							multiply = 2
						}
					}
					modifier = {
						add = 15
						has_character_modifier = childhood_prison_escape
					}
					ai_value_modifier = {
						ai_energy = 0.5
					}
				}
				## Fail.
				0 = {
					trigger_event = {
						on_action = tp_escape_from_prison_failure
					}
					min = 5
					modifier = {
						add = {
							value = scope:travel_bodyguard.intrigue
							subtract = average_skill_rating
							multiply = 2
						}
					}
					modifier = {
						add = 25
						scope:travel_bodyguard = {
							suitable_shieldmaiden_gaoler_trigger = yes
						}
					}
					modifier = {
						add = 25
						OR = {
							has_trait = weak
							has_trait = craven
							has_trait = physique_bad_1
						}
					}
					modifier = {
						add = 50
						OR = {
							has_trait = physique_bad_2
							has_trait = physique_bad_3
						}
					}
					modifier = {
						add = 25
						health <= fine_health
					}
				}
			}
		}
	}
}

###############
# Auto-escape
###############

## No one can stop the prisoner from escaping.
# root = prisoner_from_sender
# scope:travel_bodyguard = bodyguard_from_sender
# scope:imprisoner = root.imprisoner
tp_prison.9001 = {
	type = character_event
	title = tp_prison.9001.t
	desc = tp_prison.9001.desc
	theme = prison
	override_background = { reference = wilderness_scope }

	left_portrait = {
		character = root
		animation = ecstasy
	}
	right_portrait = {
		character = scope:travel_bodyguard
		triggered_animation = {
			trigger = { scope:travel_bodyguard = { is_alive = no } }
			animation = idle
		}
		triggered_animation = {
			trigger = { always = yes }
			animation = fear
		}
	}
	lower_left_portrait = scope:reciever 
	lower_right_portrait = scope:sender 

	immediate = {
		# You escape from prison...
		escape_from_prison_effect = yes
	}

	option = {
		name = tp_prison.9001.a
	}

	after = {
		remove_character_flag = block_for_prison_release_notification
		# Inform the imprisoner about the escape.
		if = {
			limit = { scope:imprisoner = { is_ai = no } }
			save_scope_as = escapee
			scope:imprisoner = { trigger_event = tp_prison.9499 }
		}
	}
}

###############
# Attempt Success!
###############

## Based from ./events/prison_events/prison_events.txt#prison.9001
## Generic success event
# root = prisoner_from_sender
# scope:travel_bodyguard = bodyguard_from_sender
# scope:imprisoner = root.imprisoner
tp_prison.9002 = {
	type = character_event
	title = tp_prison.9002.t
	desc = {
		# Instead of making a shit-ton of basic escape events we gather them all here as descs.
		random_valid = {
			#desc = tp_prison.9002.desc_1
			# Diplomatic Individial. # 2
			triggered_desc = {
				trigger = {
					OR = {
						has_trait = gregarious
						has_lifestyle = diplomacy_lifestyle
						has_diplomacy_lifestyle_trait_trigger = yes
						# is friend
					}
				}
				desc = tp_prison.9002.desc_2
			}
		}
		# End.
		desc = {
			random_valid = {
				desc = tp_prison.9002.desc_ending_1
				desc = tp_prison.9002.desc_ending_2
			}
		}
  	}
	theme = prison
	override_background = { reference = wilderness_scope }

	left_portrait = {
		character = root
		animation = ecstasy
	}
	right_portrait = {
		character = scope:travel_bodyguard
		animation = shame
	}
	lower_left_portrait = scope:reciever
	lower_right_portrait = scope:imprisoner

	immediate = {
		# You escape from prison...
		#escape_from_prison_effect = yes
	}

	option = {
		name = tp_prison.9002.a
	}

	after = {
		remove_character_flag = block_for_prison_release_notification
		# Inform the imprisoner about the escape.
		if = {
			limit = { scope:imprisoner = { is_ai = no } }
			save_scope_as = escapee
			scope:imprisoner = { trigger_event = tp_prison.9499 }
		}
	}
}

## Prisoner is released by their travel bodyguard
# root = prisoner_from_sender
# scope:travel_bodyguard = bodyguard_from_sender
tp_prison.9003 = {
	type = character_event
	title = tp_prison.9003.t
	desc = tp_prison.9003.desc
	theme = prison
	override_background = { reference = wilderness_scope }

	left_portrait = {
		character = root
		animation = ecstasy
	}
	right_portrait = {
		character = scope:travel_bodyguard
		animation = dismissal
	}
	lower_left_portrait = scope:reciever
	lower_right_portrait = scope:sender

	trigger = {
		age >= 16
		scope:travel_bodyguard = {
			is_ai = yes
			OR = {
				has_relation_potential_friend = root
				has_relation_friend = root
				has_relation_best_friend = root
				is_spouse_of = root
				has_relation_lover = root
				has_relation_soulmate = root
				is_close_family_trigger = { CHARACTER = root }
			}
		}
	}

	immediate = {
		# You escape from prison...
		escape_from_prison_effect = yes
	}

	option = {
		name = tp_prison.9003.a
	}

	after = {
		remove_character_flag = block_for_prison_release_notification
		# Inform the imprisoner about the escape.
		if = {
			limit = { scope:imprisoner = { is_ai = no } }
			save_scope_as = escapee
			scope:imprisoner = { trigger_event = tp_prison.9499 }
		}
	}
}

## Based from ./events/travel_events/travel_events_veronica.txt#travel_events.3030
## Prisoner escapes with their new found lover (travel bodyguard)
# root = prisoner_from_sender
# scope:travel_bodyguard = bodyguard_from_sender
# scope:imprisoner = root.imprisoner
tp_prison.9004 = {
	type = character_event
	title = tp_prison.9004.t
	desc = tp_prison.9004.desc
	theme = prison
	override_background = { reference = wilderness_scope }

	left_portrait = {
		character = root
		animation = ecstasy
	}
	right_portrait = {
		character = scope:travel_bodyguard
		animation = admiration
	}
	lower_left_portrait = scope:reciever
	lower_right_portrait = scope:sender

	trigger = {
		OR = {
			scope:travel_bodyguard = {
				is_ai = yes
				OR = {
					has_relation_best_friend = root
					has_relation_lover = root
					has_relation_soulmate = root
				}
			}
			AND = {
				has_lustful_adjacent_trait_trigger = yes
				scope:travel_bodyguard = { has_lustful_adjacent_trait_trigger = yes }
			}
		}
	}

	immediate = {
		# You escape from prison...
		escape_from_prison_effect = yes
	}

	# Option A: You decided to escape with your travel bodyguard.
	option = {
		name = tp_prison.9004.a

		if = {
			limit = { NOT = { scope:travel_bodyguard = { has_relation_lover = root} } }
		}

		# Opinion Modifiers
		## Prisoner's spouses.
		every_spouse = {
			### Angry.
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -30
			}
		}
		## Prisoner's lovers.
		every_relation = {
			type = lover
			### Angry.
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -30
			}
		}
		## Bodyguard's liege.
		scope:travel_bodyguard = {
			if = {
				limit = { liege ?= { NOT = { has_trait = forgiving } } }
				### Angry
				add_opinion = {
					target = liege
					modifier = angry_opinion
					opinion = -30
				}
			}
			## Bodyguard's spouses.
			every_spouse = {
				### Angry.
				add_opinion = {
					target = scope:travel_bodyguard
					modifier = angry_opinion
					opinion = -30
				}
			}
			## Bodyguard's lovers.
			every_relation = {
				type = lover
				### Angry.
				add_opinion = {
					target = scope:travel_bodyguard
					modifier = angry_opinion
					opinion = -30
				}
			}
		}

		# Stress Modifiers

		# AI Chance
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				has_lustful_adjacent_trait_trigger = yes
			}
			ai_value_modifier = {
				ai_compassion = 1
			}
		}
	}

	# Option B: You decided to leave your travel bodyguard.
	option = {
		name = tp_prison.9004.b

		# Since you are alone in the wilderness, you have a small chance to die or get hurt.
		random_list = {
			50 = {} ## Nothing happens.
			10 = { ## You encounter an animal while escaping.
				select_local_animal_effect = { TYPE = ANY }
				hunt_animal_wound_effect = { VARIABLE = root.var:animal_type }
			}
			1 = { ## You went missing.
				silent_disappearance_effect = yes
			}
		}

		# Opinion Modifiers
		reverse_add_opinion = {
			target = scope:travel_bodyguard
			modifier = angry_opinion
			opinion = -30
		}

		# Stress Modifiers
		stress_impact = {
			lustful = medium_stress_impact_gain
			seducer = medium_stress_impact_gain
			rakish = medium_stress_impact_gain
		}

		# AI Chance
		ai_chance = {
			base = 0
			modifier = {
				has_trait = chaste
				add = 25
			}
			modifier = {
				has_trait = celibate
				add = 25
			}
			ai_value_modifier = {
				ai_compassion = 1
			}
		}
	}

	after = {
		remove_character_flag = block_for_prison_release_notification
		# Inform the imprisoner about the escape.
		if = {
			limit = { scope:imprisoner = { is_ai = no } }
			save_scope_as = escapee
			scope:imprisoner = { trigger_event = tp_prison.9499 }
		}
	}
}

## Based from ./events/prison_events/prison_events.txt#prison.9499
## Notify the imprisoner about the prisoner's successful escape attempt.
# root = prisoner_from_sender
# scope:escapee = scope:prisoner_from_sender
# scope:prison_guard = bodyguard_from_sender
# scope:imprisoner = root.imprisoner
tp_prison.9499 = {
	type = character_event
	title = tp_prison.9499.t
	desc = tp_prison.9499.desc
	theme = prison

	left_portrait = {
		character = root
		animation = anger
	}
	right_portrait = {
		character = scope:prison_guard
		animation = fear
	}
	lower_left_portrait = scope:reciever
	lower_right_portrait = scope:escapee

	immediate = {
		play_music_cue = "mx_cue_prison"
		show_as_tooltip = {
			scope:escapee = { release_from_prison = yes }
		}
	}

	option = {
		name = tp_prison.9499.a
	}
}

###############
# Attempt Failed
###############

## Based from ./events/prison_events/prison_events.txt#prison.9501
## Generic fail event
# root = prisoner_from_sender
# scope:travel_bodyguard = bodyguard_from_sender
# scope:imprisoner = root.imprisoner
tp_prison.9502 = {
	type = character_event
	title = tp_prison.9502.t
	desc = tp_prison.9502.desc
	theme = prison

	left_portrait = {
		character = root
		animation = shame
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
		scope:travel_bodyguard = {
			add_opinion = {
				target = root
				modifier = angry_opinion
				opinion = -20
			}
		}
	}

	option = {
		name = tp_prison.9501.a
		add_character_modifier = {
			modifier = stress_starvation
			days = 1825
		}
	}

	after = {
		# Inform the imprisoner about the failed escape attempt.
		if = {
			limit = { scope:imprisoner = { is_ai = no } }
			save_scope_as = escapee
			scope:imprisoner = { trigger_event = tp_prison.9999 }
		}
	}
}



















# Become Wounded
tp_prison.9505 = {
	type = character_event
	title = tp_prison.9505.t
	desc = {
		desc = tp_prison.9505.opening
		random_valid = {
			desc = tp_prison.9505.wilderness
			desc = tp_prison.9505.forest
		}
	}
	theme = prison

	left_portrait = {
		character = root
		animation = paranoia
	}

	trigger = {
		has_trait_rank = {
			trait = wounded
			rank < 2
		}
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
		increase_wounds_effect = { REASON = wounds }
	}

	weight_multiplier = {
		base = 1
		modifier = {
			add = 1
			has_character_modifier = childhood_prison_escape
		}
	}

	option = { #I am still alive!
		name = tp_prison.9505.a
	}
}


## Based from ./events/prison_events/prison_events.txt#prison.9499
## Notify the imprisoner about the prisoner's failed escape attempt.
# root = prisoner_from_sender
# scope:escapee = prisoner_from_sender
# scope:travel_bodyguard = bodyguard_from_sender
# scope:imprisoner = root.imprisoner
tp_prison.9999 = {
	type = character_event
	title = tp_prison.9999.t
	desc = tp_prison.9999.desc
	theme = prison

	left_portrait = {
		character = scope:imprisoner
		animation = anger
	}
	right_portrait = {
		character = scope:travel_bodyguard
		animation = war_over_win
	}
	lower_left_portrait = scope:reciever
	lower_right_portrait = scope:escapee

	immediate = {
		play_music_cue = "mx_cue_prison"
		scope:imprisoner = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -20
			}
		}
	}

	option = {
		name = tp_prison.9999.a
	}
}