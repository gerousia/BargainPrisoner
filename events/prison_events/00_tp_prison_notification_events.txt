namespace = tp_prison_notification

# I have been moved to another prison!
tp_prison_notification.0100 = {
	type = character_event
	title = tp_prison_notification.0100.t
	desc = tp_prison_notification.0100.desc
	theme = prison

	left_portrait = {
		character = root
		animation = sad
	}

	immediate = {
		save_scope_as = prisoner

		# Figure out who needs to be notified about this character being moved to another prison.
		every_player = {
			save_scope_as = this_player

			if = { # If prisoner is a player's heir or spouse, send them a full pop-up event.
				limit = {
					OR = {
						AND = {
							exists = player_heir
							player_heir = scope:prisoner
						}
						AND = {
							exists = primary_heir
							primary_heir = scope:prisoner
						}
						is_consort_of = scope:prisoner
					}
				}
				trigger_event = tp_prison_notification.0101
			}
			else_if = { # Otherwise, if they are of interest to a player, send the player a notification
				limit = {
					scope:prisoner = {
						has_any_relation_trigger = {CHARACTER = scope:this_player }
					}
				}
				trigger_event = prison_notification.2003
			}
		}
	}

	option = {
		name = tp_prison_notification.0100.a
	}
}

# My significant relation has been moved to another prison!
tp_prison_notification.0101 = {
	type = character_event
	title = tp_prison_notification.0101.t
	desc = tp_prison_notification.0101.desc
	theme = prison

	left_portrait = {
		character = scope:prisoner
		animation = sad
	}
	#lower_right_portrait = {
	#	#character = scope:imprisoner
	#}

	trigger = {
		#NOT = { scope:imprisoner = root }
		#NOT = { scope:prisoner = { has_character_flag = block_release_from_prison_event } }
		scope:prisoner = { is_alive = yes }
	}
	
	immediate = {
		show_as_tooltip = {
			scope:prisoner = {
				release_from_prison = yes
			}
		}	
	}

	option = {
		name = tp_prison_notification.0101.a
	}
}