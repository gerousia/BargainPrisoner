##############################
## TP Prisoner scripted_effects
##############################

take_prisoner = {
	$PRISONER$ = {
	#if = {
	#	limit = { has_character_flag = under_offer_as_prisoner_flag	} 
	#	## MEMORY HERE
	#	#
	#	#
	#
	#	}
	release_from_prison = yes
	}
	imprison = {
		target = $PRISONER$
		type = house_arrest
	}
}

travel_back_home = {
	if = {
		limit = { 
			is_imprisoned = no
			NOT = { location = liege.capital_province } 
		}
		start_travel_plan = {
			players_use_planner = no
			destination = liege.capital_province
			return_trip = no
		}
	}
}

prisoner_depart_effect = {
	$PRISONER$ = { save_scope_as = prisoner_from_sender }
	$RECIEVER$ = { save_scope_as = reciever }
	$SENDER$ = { save_scope_as = sender }

	#scope:sender = { save_scope_as = bodyguard_from_sender }

	scope:sender = {
		if = {
			limit = { employs_court_position = bodyguard_court_position }
			every_court_position_holder = {
				type = bodyguard_court_position
				limit = { 
					NOT = { exists = bodyguard_from_sender }
					is_available = yes
					#location = liege.capital_province 
				}
				set_variable = {
					name = prisoner_company_travelling_to_recipient
					value = scope:prisoner_from_sender
					years = 2 # Arbritrary Value
				}
				save_scope_as = bodyguard_from_sender
			}
		}
	}
	scope:prisoner_from_sender = {
		hidden_effect = {
			# interface_toast for Sender
			scope:sender = {
				send_interface_toast = {
					title = prisoner_departs_title
					left_icon = scope:prisoner_from_sender
					right_icon = scope:reciever
					# Departure info
					scope:prisoner_from_sender = {
						custom_description = {
							text = prisoner_leaves_for_recipient_tt
							subject = scope:prisoner_from_sender
							object = scope:reciever
						}
					}
				}
			}
			# interface_toast for Recipient
			scope:reciever = {
				send_interface_toast = {
					title = prisoner_departs_title
					left_icon = scope:prisoner_from_sender
					right_icon = scope:sender
					# Departure info
					scope:prisoner_from_sender = {
						custom_description = {
							text = prisoner_leaves_for_recipient_tt
							subject = scope:prisoner_from_sender
							object = scope:reciever
						}
					}
				}
			}
		}

		set_variable = {
			name = prison_guard_travelling_with_prisoner
			value = scope:bodyguard_from_sender
			years = 2 # Arbritrary Value
		}

		# Prisoner travels to recipient
		start_travel_plan = { # ??? Can't find info within the code
			players_use_planner = no
			destination = scope:reciever.capital_province
			companion = scope:bodyguard_from_sender
			on_start_on_action = on_prisoner_company_depart_for_recipient
			on_travel_planner_cancel_on_action = on_prisoner_company_depart_travel_planner_exit
			on_arrival_on_action = on_prisoner_company_arrive_at_recipient
			on_arrival_destinations = last
			return_trip = no
		}

		# TRIGGERS FOR POTENTIALLY MANIPULATING PRESTIGE/REKNOWN/PIETY HERE
		#
		#
		#
	}
}

prisoner_travel_company_remove_effect = {
	# Removes the prisoner under offer to the recipient
	if = {
		limit = { has_character_flag = under_offer_as_prisoner_flag }
		remove_character_flag = under_offer_as_prisoner_flag
	}

	# Removes the bodyguard from the prisoner
	var:prison_guard_travelling_with_prisoner ?= {
		if = {
			limit = { exists = prisoner_company_travelling_to_recipient }
			remove_variable = prisoner_company_travelling_to_recipient
		}
	}
	if = {
		limit = { exists = prison_guard_travelling_with_prisoner }
		remove_variable = prison_guard_travelling_with_prisoner
	}

	# Removes the invalidation reason
	if = {
		limit = { exists = invalidation_reason }
		remove_variable = invalidation_reason
	}
}