##############################
## GM1 scripted_effects
##############################
#------------------------------
# list
#------------------------------
# transfer_prisoner_interaction_effect
# transfer_prisoner_interaction_stress_effect
# transfer_prisoner_interaction_dread_effect
# transfer_prisoner_interaction_escalate_rivalry_effect
# transfer_prisoner_interaction_bargain_effect
# disband_all_schemes_effect

#------------------------------
# interaction-related
#------------------------------

# PRISONER (character)
# SENDER (character)
# RECEIVER (character)
transfer_prisoner_interaction_effect = {
	$RECEIVER$ = {
		if = {
			limit = {
				OR = {
					scope:exploitive_extortionate_current_gold ?= yes
					scope:extortionate_current_gold ?= yes
					scope:exploitive_current_gold ?= yes
					scope:current_gold ?= yes
				}
			}
			save_scope_value_as = {
				name = barter_saved_gold_value
				value = $RECEIVER$.current_gold_value
			}
		}
	}

	change_imprisoner_character_effect = { 
		TARGET = $PRISONER$
		IMPRISONER = $SENDER$
		NEW_IMPRISONER = $RECEIVER$
	}
	
	## Apply immediate effects towards the prisoner's current imprisoner
	transfer_prisoner_interaction_dread_effect = { 
		PRISONER = $PRISONER$
		IMPRISONER = $SENDER$
	}

	transfer_prisoner_interaction_stress_effect = { 
		PRISONER = $PRISONER$
		IMPRISONER = $SENDER$
	}

	disband_all_schemes_effect = {
		WHO = $SENDER$
		TARGET = $PRISONER$
	}

	## Apply immediate effects towards the prisoner's next imprisoner
	transfer_prisoner_interaction_dread_effect = { 
		PRISONER = $PRISONER$
		IMPRISONER = $RECEIVER$
	}

	transfer_prisoner_interaction_stress_effect = { 
		PRISONER = $PRISONER$
		IMPRISONER = $RECEIVER$
	}

	transfer_prisoner_interaction_escalate_rivalry_effect = {
		PRISONER = $PRISONER$
		NEW_IMPRISONER = $RECEIVER$
	}

	disband_all_schemes_effect = {
		WHO = $RECEIVER$
		TARGET = $PRISONER$
	}

	transfer_prisoner_interaction_bargain_effect = {
		PRISONER = $PRISONER$
		SENDER = $SENDER$
		RECEIVER = $RECEIVER$
	}
}

# based on ./common/character_interactions/00_prison_interactions.txt/imprison_interaction
## PRISONER (character)
## IMPRISONER (character)
transfer_prisoner_interaction_stress_effect = {
	 $IMPRISONER$ = {
		if = {
			limit = { has_imprisonment_reason = $PRISONER$ }
			stress_impact = {
				compassionate = minor_stress_impact_gain
				forgiving = minor_stress_impact_gain
			}
		}
		else = {
			stress_impact = {
				just = medium_stress_impact_gain
				compassionate = medium_stress_impact_gain
			}
		}
	}
}

# based on ./common/scripted_effects/00_interaction_effects.txt/illegal_imprisonment_dread_effect
## PRISONER (character)
## IMPRISONER (character)
transfer_prisoner_interaction_dread_effect = {
	$IMPRISONER$ = {
		if = {
			limit = { NOT = { has_imprisonment_reason = $PRISONER$ } }
			if = {
				limit = {
					$PRISONER$ = {
						OR = {
							is_spouse_of = $IMPRISONER$
							is_close_family_of = $IMPRISONER$
							tier_or_related_liege_tier_greater_or_equal_trigger = { TIER = tier_kingdom }
						}
					}
				}
				add_dread = medium_dread_gain
			}
			else_if = {
				limit = {
					$PRISONER$ = {
						OR = {
							tier_or_related_liege_tier_equal_trigger = { TIER = tier_duchy }
							tier_or_related_liege_tier_equal_trigger = { TIER = tier_county }
						}
					}
				}
				add_dread = minor_dread_gain
			}
		}
	}
}

# based on ./common/scripted_effects/00_prison_effects.txt/imprison_attempt_escalates_rivalry_effect
## PRISONER (character)
## NEW_IMPRISONER (character)
transfer_prisoner_interaction_escalate_rivalry_effect = {
	$PRISONER$ = {
		if = {
			limit = {
				NOT = { has_relation_rival = imprisoner }
				OR = {
					$NEW_IMPRISONER$ = { is_at_war_with = $PRISONER$ }
					has_requested_excommunication_by = { WHO = imprisoner }
					has_opinion_modifier = {
						modifier = revoked_title
						target = imprisoner
					}
				}
			}
			hidden_effect = {
				if = {
					limit = { has_relation_potential_rival = imprisoner }
					remove_relation_potential_rival = imprisoner
				}
			}
			set_relation_rival = imprisoner
		}
		else = {
			hidden_effect = {
				progress_towards_rival_effect = {
					CHARACTER = imprisoner
					REASON = rival_imprisoned
					OPINION = 0
				}
			}
		}
	}
}

# PRISONER (character)
# SENDER (character)
# RECEIVER (character)
transfer_prisoner_interaction_bargain_effect = {
	$RECEIVER$ = {
		## War
		## FP3 Perk 
		### Full Gold Amount
		### Full Prestige Amount 
		if = {
			limit = { scope:exploitive_extortionate_gold ?= yes	}
			pay_short_term_gold = {
				gold = $PRISONER$.highly_increased_barter_cost_value
				target = $SENDER$
			}
			$SENDER$ = { 
				add_prestige = $PRISONER$.highly_increased_barter_cost_value
			}
		}
		## War
		## FP3 Perk 
		### Partial Gold Amount
		### Partial Prestige Amount 
		if = {
			limit = { scope:exploitive_extortionate_current_gold ?= yes	}
			pay_short_term_gold = {
				gold = scope:barter_saved_gold_value
				target = $SENDER$
			}
			$SENDER$ = { 
				add_prestige = scope:barter_saved_gold_value
			}
		}
		## FP3 Perk 
		### Full Gold Amount
		### Full Prestige Amount 
		if = {
			limit = { scope:extortionate_gold ?= yes }
			pay_short_term_gold = {
				gold = $PRISONER$.slightly_increased_barter_cost_value
				target = $SENDER$
			}
			$SENDER$ = { 
				add_prestige = $PRISONER$.slightly_increased_barter_cost_value 
			}
		}
		## FP3 Perk 
		### Partial Gold Amount
		### Partial Prestige Amount 
		if = {
			limit = { scope:extortionate_current_gold ?= yes }
			pay_short_term_gold = {
				gold = scope:barter_saved_gold_value
				target = $SENDER$
			}
			$SENDER$ = { 
				add_prestige = scope:barter_saved_gold_value 
			}
		}
		## War 
		### Full Gold Amount
		if = {
			limit = { scope:exploitive_gold ?= yes }
			pay_short_term_gold = {
				gold = $PRISONER$.increased_barter_cost_value
				target = $SENDER$
			}
		}
		## War 
		### Partial Gold Amount
		if = {
			limit = { scope:exploitive_current_gold ?= yes }
			pay_short_term_gold = {
				gold = scope:barter_saved_gold_value
				target = $SENDER$
			}
		}
		### Full Gold Amount
		if = {
			limit = { scope:gold ?= yes }
			pay_short_term_gold = {
				gold = $PRISONER$.barter_cost_value
				target = $SENDER$
			}
		}
		### Partial Gold Amount
		if = {
			limit = { scope:current_gold ?= yes }
			pay_short_term_gold = {
				gold = scope:barter_saved_gold_value
				target = $SENDER$
			}
		}
		### Strong Hook
		if = {
			limit = { scope:strong_hook ?= yes }
			$SENDER$ = {
				add_hook = {
					target = $RECEIVER$
					type = loyalty_hook
				}
			}
		}
		### Weak Hook
		if = {
			limit = { scope:favor ?= yes }
			$SENDER$ = {
				add_hook = {
					target = $RECEIVER$
					type = favor_hook
				}
			}
		}
	}

	$SENDER$ = {
		### Forced Auto-Accept
		if = {
			limit = { scope:hook ?= yes }
			if = {
				limit = {
					NOT = { is_vassal_of = $RECEIVER$ }
					NOT = { $RECEIVER$ = { has_strong_hook = $SENDER$ } }
				}
				add_opinion = {
					target = $RECEIVER$
					modifier = demanded_transfer_prisoner
				}
			}
			$RECEIVER$ = { use_hook = $SENDER$ }
		}
		else_if = {
			limit = { is_vassal_of = $RECEIVER$ }
			add_opinion = {
				target = $RECEIVER$
				modifier = demanded_transfer_prisoner
			}
		}
	}

	$PRISONER$ = {
		if = {
			limit = { has_character_flag = under_transfer_prisoner_interaction }
			remove_character_flag = under_transfer_prisoner_interaction
		}
	}
}

# based on ./common/character_interactions/00_prison_interactions.txt/imprison_interaction
## TARGET (character)
## WHO (character)
disband_all_schemes_effect = {
	hidden_effect = {
		$WHO$ = {
			if = {
				limit = { any_scheme = { scheme_target = $TARGET$ } }
				every_scheme = {
					limit = { scheme_target = $TARGET$ }
					end_scheme = yes
				}
			}
		}
	}
}