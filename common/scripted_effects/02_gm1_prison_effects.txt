##############################
## GM1 scripted_effects
##############################
#------------------------------
# list
#------------------------------
# change_imprisoner_character_effect
# change_imprisoner_vassal_consequences_effect
# change_imprisoner_head_of_faith_consequences_effect
# change_imprisoner_war_participants_consequences_effect

# based on ./common/scripted_effects/00_prison_effects.txt/imprison_character_effect
# TARGET (character)
# IMPRISONER (character)
# NEW_IMPRISONER (character)
change_imprisoner_character_effect = {
	$TARGET$ = { save_scope_as = imprisonment_target }
	$IMPRISONER$ = { save_scope_as = old_imprisoner }
	$NEW_IMPRISONER$ = { save_scope_as = new_imprisoner }

	scope:imprisonment_target = {
		create_character_memory = {
			type = change_imprisoner_prisoner_memory
			participants = {
				old_imprisoner = scope:old_imprisoner
				new_imprisoner = scope:new_imprisoner
			}
		}
	}

	scope:old_imprisoner = {
		create_character_memory = {
			type = change_imprisoner_old_imprisoner_memory
			participants = {
				prisoner = scope:imprisonment_target
				new_imprisoner = scope:new_imprisoner
			}
		}
	}

	scope:new_imprisoner = {
		create_character_memory = {
			type = change_imprisoner_new_imprisoner_memory
			participants = {
				prisoner = scope:imprisonment_target
				old_imprisoner = scope:old_imprisoner
			}
		}
	}

	scope:imprisonment_target = {
		custom_description = { 
			text = "move_tooltip"
	
			if = {
				limit = { scope:old_imprisoner = { has_imprisonment_reason = prev } }
				consume_all_criminal_reasons_effect = { 
					LIEGE = scope:old_imprisoner
					CRIMINAL = this
				}
			}
		}

		custom_description = {
			text = "release_tooltip"
			subject = scope:old_imprisoner
			object = this

			if = {
				limit = { is_imprisoned_by = scope:old_imprisoner }
				if = {
					limit = { has_character_modifier = allowed_to_go_outside }
					remove_character_modifier = allowed_to_go_outside
				}
		
				if = {
					limit = { has_character_modifier = moldy_gruel_diet }
					remove_character_modifier = moldy_gruel_diet
				}
	
				## We won't change the original vanilla on_release_from_prison in on_action
				## Instead we'll make use of the existing escaped_from_prison_flag
				## * Remove when changed or if there's a better way to implement this
	
				## What technically happens when you "escaped_from_prison"?
				## - Prevents release_from_prison_memory from being created
				## - Changes imprisoned_me to imprisoned_me_past opinion modifier
	
				add_character_flag = {
					flag = escaped_from_prison_flag
					days = 1
				}
		
				add_character_flag = {
					flag = block_for_prison_release_notification
					days = 1
				}

				add_character_flag = {
					flag = recently_prison_transferred
					years = 3
				}

				release_from_prison = yes
				remove_character_flag = escaped_from_prison_flag
			}
		}

		custom_description = {
			text = "imprison"
			subject = scope:new_imprisoner
			object = this

			if = {
				limit = { is_imprisoned = no }

				if = {
					limit = {
						exists = liege
						OR = {
							is_landed = yes
							is_close_or_extended_family_of = liege
							is_spouse_of = liege
						}
					}
					scope:new_imprisoner = {
						imprison = {
							target = prev
							type = house_arrest
						}
					}
				}
				else = {
					scope:new_imprisoner = {
						imprison = {
							target = prev
							type = dungeon
						}
					}
				}
			}
		}

		## Send break up event if their old imprisoner is their lover
		if = {
			limit = {
				has_relation_lover = scope:old_imprisoner
				NOT = { has_relation_rival = scope:old_imprisoner }
			}
			trigger_event = {
				id = lover.0101
				days = { 14 30 }
			}
		}

		## Send break up event if their new imprisoner is their lover
		if = {
			limit = {
				has_relation_lover = scope:new_imprisoner
				NOT = { has_relation_rival = scope:new_imprisoner }
			}
			trigger_event = {
				id = lover.0101
				days = { 14 30 }
			}
		}

		## Prisoner's Opinion towards their old imprisoner		
		### They are at risk of rightful execution due to differing faith
		if = {
			limit = { NOT = { faith = scope:new_imprisoner.faith } }
			add_opinion = {
				target = scope:old_imprisoner
				modifier = transferred_me_different_faith
			}
		}
		### They'd rather not be with their previous imprisoner if they are a PoS
		else_if = {
			limit = {
				scope:old_imprisoner = {
					NOT = { has_any_bad_relationship_with_character_trigger = { CHARACTER = prev } }
					NOR = { 
						has_trait = sadistic
						has_trait = callous
						has_trait = arbitrary
						has_trait = wrathful
						has_trait = vengeful
						has_trait = deceitful
					} 
				}
			}
			add_opinion = {
				target = scope:old_imprisoner
				modifier = transferred_me
			}
		}

		## Prisoner's Opinion towards their new imprisoner
		add_opinion = {
			target = scope:new_imprisoner
			modifier = imprisoned_me
		}

		## Prisoner's family member opinion
		every_close_or_extended_family_member = {
			limit = { 
				NOT = { scope:old_imprisoner = this }
				NOT = { scope:new_imprisoner = this }
			}
			add_to_temporary_list = prisoner_family_list
		}

		if = {
			limit = {
				any_in_list = {
					list = prisoner_family_list
					count > 0
				}
			}
			
			every_in_list = {
				list = prisoner_family_list
				custom = all_close_family_and_spouses

				add_opinion = {
					target = scope:old_imprisoner
					modifier = transferred_family_member
				}

				if = {
					limit = { scope:imprisonment_target = { is_in_prison_type = house_arrest } }
					add_opinion = {
						target = scope:new_imprisoner
						modifier = imprisoned_family_member
					}
				}
				else_if = {
					limit = { scope:imprisonment_target = { is_in_prison_type = dungeon } }
					add_opinion = {
						target = scope:new_imprisoner
						modifier = imprisoned_family_member_dungeon
					}
				}
			}
		}
	}

	change_imprisoner_vassal_consequences_effect = {
		IMPRISONER = scope:old_imprisoner
		PRISONER = scope:imprisonment_target
	}

	change_imprisoner_vassal_consequences_effect = {
		IMPRISONER = scope:new_imprisoner
		PRISONER = scope:imprisonment_target
	}

	change_imprisoner_head_of_faith_consequences_effect = {
		IMPRISONER = scope:old_imprisoner
		PRISONER = scope:imprisonment_target
	}

	change_imprisoner_head_of_faith_consequences_effect = {
		IMPRISONER = scope:new_imprisoner
		PRISONER = scope:imprisonment_target
	}

	change_imprisoner_war_participants_consequences_effect = {
		OLD_IMPRISONER = scope:old_imprisoner
		NEW_IMPRISONER = scope:new_imprisoner
		PRISONER = scope:imprisonment_target
	}
}

# based on ./common/scripted_effects/00_prison_effects.txt/imprison_tyranny_effect
## IMPRISONER (character)
## PRISONER (character)
change_imprisoner_vassal_consequences_effect = {
	$IMPRISONER$ = {
		if = {
			limit = { $PRISONER$ = { is_vassal_of = prev } }
			custom_description = {
				text = "change_imprisoner_vassal_tooltip"
				subject = $IMPRISONER$
				object = $PRISONER$
			}
			if = {
				limit = { 
					OR = {
						has_imprisonment_reason = $PRISONER$
						is_at_war_with = $PRISONER$
					}
				}
				custom_description = { 
					text = "add_opinion_imprison_reason_unusable"
					object = $PRISONER$
				}
			}
			else = { 
				add_tyranny = imprisonment_tyranny_gain
			}
		}
	}
}

# based on ./common/scripted_effects/00_prison_effects.txt/imprison_HoF_consequences_effect
## IMPRISONER (character)
## PRISONER (character)
change_imprisoner_head_of_faith_consequences_effect = {		
	$IMPRISONER$ = {
		if = {
			limit = { $PRISONER$ = { is_head_of_faith_of = { WHO = prev } } }
			custom_description = {
				text = "change_imprisoner_head_of_faith_tooltip"
				object = $PRISONER$
			}
			if = {
				limit = { 
					OR = {
						has_imprisonment_reason = $PRISONER$
						is_at_war_with = $PRISONER$
					}
				}
				custom_description = { 
					text = "add_opinion_imprison_reason_unusable"
					object = $PRISONER$
				}
			}
			else = { 
				add_piety_level = -1
				add_piety = medium_piety_loss
			}
		}
	}
}

# OLD_IMPRISONER (character)
# NEW_IMPRISONER (character)
# PRISONER (character)
change_imprisoner_war_participants_consequences_effect = {
	$PRISONER$ = {
		if = {
			limit = { is_at_war_with = $OLD_IMPRISONER$ }
			custom_description = {
				text = "change_imprisoner_war_tooltip"
				subject = $OLD_IMPRISONER$
				object = this
			}
		}

		if = { 
			limit = { is_at_war_with = $NEW_IMPRISONER$ }
			custom_description = {
				text = "change_imprisoner_war_tooltip"
				subject = this
				object = $NEW_IMPRISONER$
			}
	
			custom_description = {
				text = "change_imprisoner_war_tooltip"
				subject = $NEW_IMPRISONER$
				object = this
			}
	
			if = {
				limit = { any_character_war = { is_war_leader = prev } }
				custom_description = { text = "change_imprisoner_war_leader_tooltip" }
				add_opinion = {
					target = $OLD_IMPRISONER$
					modifier = supported_my_enemy_opinion
					opinion = -50
				}

				$NEW_IMPRISONER$ = {
					add_opinion = {
						target = $OLD_IMPRISONER$
						modifier = supported_my_war_opinion
						opinion = 40
					}
				}
			}
			else = {
				add_opinion = {
					target = $OLD_IMPRISONER$
					modifier = supported_my_enemy_opinion
				}

				$NEW_IMPRISONER$ = {
					add_opinion = {
						target = $OLD_IMPRISONER$
						modifier = supported_my_war_opinion
					}
				}
			}
		}

		## Determine war participants
		every_character_war = {
			limit = { is_participant = $NEW_IMPRISONER$ }
			every_war_participant = {
				limit = {
					NOT = { $PRISONER$ = this }
					NOT = { $OLD_IMPRISONER$ = this } 
					NOT = { $NEW_IMPRISONER$ = this } 
				}
				if = {
					limit = { 
						is_allied_in_war = $PRISONER$ 
						NOT = { is_allied_in_war = $NEW_IMPRISONER$ }
					}
					add_to_temporary_list = war_ally_list
				}
				else_if = {
					limit = { 
						is_allied_in_war = $NEW_IMPRISONER$ 
						NOT = { is_allied_in_war = $PRISONER$ }
					}
					add_to_temporary_list = war_enemy_list
				}
			}
		}

		## Prisoner's allies opinion towards their old imprisoner
		if = {
			limit = { any_in_list = { list = war_ally_list count > 0 } }
			every_in_list = {
				list = war_ally_list
				custom = all_war_allies
				if = {
					limit = { $PRISONER$ = { any_character_war = { is_war_leader = prev } } }
					add_opinion = {
						target = $OLD_IMPRISONER$
						modifier = supported_my_enemy_opinion
						opinion = -50
					}
				}
				else = {
					add_opinion = {
						target = $OLD_IMPRISONER$
						modifier = supported_my_enemy_opinion
					}
				}
			}
		}

		## Prisoner's enemies opinion towards their old imprisoner
		if = {
			limit = { any_in_list = { list = war_enemy_list count > 0 } }
			every_in_list = {
				list = war_enemy_list
				custom = all_war_allies
				if = {
					limit = { $PRISONER$ = { any_character_war = { is_war_leader = prev } } }
					add_opinion = {
						target = $OLD_IMPRISONER$
						modifier = supported_my_war_opinion
						opinion = 40
					}
				}
				else = {
					add_opinion = {
						target = $OLD_IMPRISONER$
						modifier = supported_my_war_opinion
					}
				}		
			}
		}
	}
}