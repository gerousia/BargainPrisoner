##############################
## Vanilla Prison on_actions
##############################

## From ./common/on_action/prison_on_actions.txt
# Code on-action: character released from prison in root scope. Does not fire when "released" due to dying
# imprisoning character set as scope:imprisoner
on_release_from_prison = {
	effect = {

		if = {
			# Uses flag to stop multiple memories from generating with released_from_prison_memory
			limit = { 
				NOT = { has_character_flag = escaped_from_prison_flag } 
				NOT = { has_character_flag = under_offer_as_prisoner_flag }
			}
			create_character_memory = {
				type = released_from_prison_memory
				participants = {
					imprisoner = scope:imprisoner
				}
			}
		}

		# From TP - Prisoner is under offer as prisoner to another ruler
		#if = {
		#	limit = { has_character_flag = under_offer_as_prisoner_flag }
		#	remove_character_flag = under_offer_as_prisoner_flag
		#}

		# From FP1 - Prisoner is designated as a human sacrifice
		if = {
			limit = { has_character_modifier = gruesome_festivals_designated_sacrifice_fp1_modifier }
			remove_character_modifier = gruesome_festivals_designated_sacrifice_fp1_modifier
		}
		
		# From Event hold_court.6140
		if = {
			limit = { has_character_modifier = 6140_animal_guardian_modifier }
			remove_character_modifier = 6140_animal_guardian_modifier
		}

		# Prisoner is Realm Priest
		if = {
			limit = { has_character_flag = realm_priest }
			remove_character_flag = realm_priest
		}

		# Prisoner has a rival
		if = {
			limit = { has_character_flag = rival_on_exit_prison	}
			remove_character_flag = rival_on_exit_prison

			# imprisoner has to still be valid and alive
			if = {
				limit = { scope:imprisoner ?= { is_alive = yes } }
				set_relation_rival = {
					target = scope:imprisoner
					reason = rival_was_kept_in_jail
				}
			}
		}

		# Prisoner was imprisoned by Diarch
		if = {
			limit = { has_variable = imprisoned_by_diarch }
			remove_variable = imprisoned_by_diarch
		}
	}

	events = {
		prison.0001					# Remove imprisoned_me modifier, consume imprisonment reasons the imprisoner had
		prison_notification.2001
		intrigue_dread.4010			# Interrupts this event chain for the imprisoner when their prisoner is freed.
		human_sacrifice.0003		# Is the character marked for human sacrifice?
		martial_authority.2054 		# Right-hand wo/man released 
	}
}

## Based from ./common/on_action/prison_on_actions.txt
# On actions directing prison-related events
# Note that prison stress events are handled through the Stress on-actions.


###############
# Attempt Escape
###############

tp_escape_from_prison_travel = {
	events = {
		tp_prison.9000
	}
}

tp_escape_from_prison_success = {
	random_events = {
		1 = tp_prison.9002 # You escaped!
		#100 = tp_prison.9003 # You escaped thanks to your travel bodyguard.
		#100 = tp_prison.9004 # You escape with your travel bodyguard.
	}
}

tp_escape_from_prison_failure = {
	random_events = {
		#10 = prison.9501 #You're still stuck, buttercup... :(
		#100 = prison.9502 #You and your prison pet failed
		#100 = prison.9503 #Your friend or close family member leave you behind
		#200 = fp1_shieldmaiden.0011 #Your imprisoner's shieldmaiden stymies your escape.
		#50 = prison.9504 #Rival sabotages escape
		#5 = prison.9505 #Become wounded
	}
}