##############################
## GM1 scripted_triggers
##############################
#------------------------------
# list
#------------------------------
# gm1_basic_valid_for_transfer_prisoner_interaction_trigger
# gm1_available_for_transfer_prisoner_interaction_trigger
# gm1_available_for_transfer_prisoner_interaction_trigger_ai

#------------------------------
# interaction-related
#------------------------------

# CURR_IMPRISONER (character)
# NEXT_IMPRISONER (character)
gm1_basic_valid_for_transfer_prisoner_interaction_trigger = {
	## Must not be themself.
	NOT = { $NEXT_IMPRISONER$ = this }
	## Must be imprisoned.
	is_imprisoned = yes
	## Must be imprisoned by actor.
	is_imprisoned_by = $CURR_IMPRISONER$
	## Must not be imprisoned by diarch.
	cannot_release_former_regent_whilst_old_regent_holds_power_trigger = {
		PRISONER = this
		REGENT = this.var:imprisoned_by_diarch
	}
}

gm1_available_for_transfer_prisoner_interaction_trigger = {
	## Must not be under any ongoing interaction.
	already_under_ongoing_interaction = no
	## Must be at imprisoner capital.
	custom_description = {
		text = "is_at_imprisoner_capital"
		subject = this
		object = imprisoner
		is_at_location = imprisoner.capital_province
	}
	## Must not currently be tortured.
	is_being_tortured = no
	## Must not be dying.
	health > dying_health
}

# AI
gm1_available_for_transfer_prisoner_interaction_trigger_ai = {
	# Recipient.
	## Must be neighbhors.
	$RECIPIENT$ = {
		character_is_land_realm_neighbor = root
	}
	# Prisoner.
	$PRISONER$ = {
		OR = {
			is_vassal_of = $RECIPIENT$
			is_at_war_with = $RECIPIENT$
			has_any_good_relationship_with_character_trigger = { CHARACTER = $RECIPIENT$ }
			has_any_bad_relationship_with_character_trigger = { CHARACTER = root }
			should_avoid_hostile_action_against_due_to_personal_relations_trigger = {
				ACTOR = root
				RECIPIENT = this
			}
		}
	}
}
